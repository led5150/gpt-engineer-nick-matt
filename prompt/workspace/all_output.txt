The game will be implemented in Python using the Pygame library. The core classes and functions that will be necessary are:

1. `Game`: This class will handle the game loop, events, and rendering.
2. `Player`: This class will represent the player's spaceship. It will handle movement and collision detection.
3. `Asteroid`: This class will represent the asteroids. It will handle movement and collision detection.
4. `Score`: This class will keep track of the player's score.

The entrypoint file will be `main.py`, which will initialize the game and start the game loop.

Now let's proceed with the implementation of each file.

main.py
```python
import pygame
from game import Game

def main():
    pygame.init()
    game = Game()
    game.run()
    pygame.quit()

if __name__ == "__main__":
    main()
```

game.py
```python
import pygame
from player import Player
from asteroid import Asteroid
from score import Score

class Game:
    def __init__(self):
        self.screen = pygame.display.set_mode((800, 600))
        self.clock = pygame.time.Clock()
        self.player = Player(self)
        self.asteroids = pygame.sprite.Group()
        self.score = Score(self)
        self.running = True

    def run(self):
        while self.running:
            self.clock.tick(60)
            self.handle_events()
            self.update()
            self.draw()
        self.game_over()

    def handle_events(self):
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                self.running = False

    def update(self):
        self.player.update()
        self.asteroids.update()
        self.score.update()
        if pygame.sprite.spritecollide(self.player, self.asteroids, False):
            self.running = False

    def draw(self):
        self.screen.fill((0, 0, 0))
        self.player.draw()
        self.asteroids.draw(self.screen)
        self.score.draw()
        pygame.display.flip()

    def game_over(self):
        font = pygame.font.Font(None, 74)
        text = font.render("GAME OVER", 1, (255, 0, 0))
        self.screen.blit(text, (250, 250))
        pygame.display.flip()
        pygame.time.wait(3000)
```

player.py
```python
import pygame

class Player(pygame.sprite.Sprite):
    def __init__(self, game):
        super().__init__()
        self.game = game
        self.image = pygame.image.load('spaceship.png')
        self.rect = self.image.get_rect()
        self.rect.bottom = self.game.screen.get_height()
        self.rect.centerx = self.game.screen.get_width() / 2

    def update(self):
        keys = pygame.key.get_pressed()
        if keys[pygame.K_LEFT]:
            self.rect.x -= 10
        if keys[pygame.K_RIGHT]:
            self.rect.x += 10
        if self.rect.left < 0:
            self.rect.left = 0
        if self.rect.right > self.game.screen.get_width():
            self.rect.right = self.game.screen.get_width()

    def draw(self):
        self.game.screen.blit(self.image, self.rect)
```

asteroid.py
```python
import pygame
import random

class Asteroid(pygame.sprite.Sprite):
    def __init__(self, game):
        super().__init__()
        self.game = game
        self.image = pygame.Surface((50, 50))
        self.image.fill((255, 255, 255))
        self.rect = self.image.get_rect()
        self.rect.x = random.randrange(self.game.screen.get_width() - self.rect.width)
        self.rect.y = -self.rect.height

    def update(self):
        self.rect.y += 5
        if self.rect.top > self.game.screen.get_height():
            self.rect.x = random.randrange(self.game.screen.get_width() - self.rect.width)
            self.rect.y = -self.rect.height
```

score.py
```python
import pygame

class Score:
    def __init__(self, game):
        self.game = game
        self.score = 0
        self.font = pygame.font.Font(None, 36)

    def update(self):
        self.score += 1/6

    def draw(self):
        text = self.font.render("Score: " + str(int(self.score)), 1, (255, 255, 255))
        self.game.screen.blit(text, (10, 10))
```

The `requirements.txt` file for the Python environment would be:

requirements.txt
```txt
pygame==2.0.1
```

This game can be run by executing the `main.py` file in a Python environment with the Pygame library installed. The spaceship image should be in the same directory as the Python files and named `spaceship.png`. The game window will be 800 pixels wide and 600 pixels tall. The player can move the spaceship left and right using the arrow keys. Asteroids will spawn at the top of the screen and move downwards. If the spaceship collides with an asteroid, the game will end and display a "GAME OVER" message. The player's score, which increases by approximately 10 points per second, is displayed in the top left corner of the screen.